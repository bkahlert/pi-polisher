---
- name: install samba
  ansible.builtin.apt:
    name: samba
    state: present

- name: copy samba configs
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/samba/{{ item | basename | regex_replace('.j2$', '') }}"
    mode: "0644"
    force: true
  with_fileglob: [ templates/*.conf.j2 ]
  become: true
  notify: restart samba

- name: get samba passwords (if not done already due to not yet installed samba)
  include_tasks: get-samba-password.yml
  loop: "{{ group_members['users'] | default([]) }}"
  when: smb_passwords is not defined

- name: set passwords
  include_tasks: set-samba-password.yml
  loop: "{{ smb_passwords | default({}) | dict2items }}"

- name: copy avahi services
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/avahi/services/{{ item | basename | regex_replace('.j2$', '') }}"
    mode: "0644"
    force: true
  with_fileglob: [ templates/*.service.j2 ]
  become: true
  notify: restart avahi

- name: explain shares
  vars:
    marker_begin_latin1: "MARKER_BEGIN"
    marker_begin_unicode: "─=≡▰▩▩[ 蓬•ｏ•]⊐"
    marker_end_latin1: "MARKER_END"
    marker_end_unicode: "​​​"
    path: /etc/motd
  block:
    - name: convert markers to latin1
      ansible.builtin.replace:
        path: "{{ path }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      loop:
        - { regexp: "{{ marker_begin_unicode | regex_escape() }}", replace: "{{ marker_begin_latin1 }}" }
        - { regexp: "{{ marker_end_unicode | regex_escape() }}", replace: "{{ marker_end_latin1 }}" }
    - name: update block
      vars:
        user: "{{ (group_members['users'] | default(['pi']))[0] }}"
      ansible.builtin.blockinfile:
        path: /etc/motd
        create: true
        mode: "0644"
        marker: "{mark}"
        marker_begin: "{{ marker_begin_latin1 }} Shares"
        block: |2
              smb://{{ inventory_hostname }}/{{ user }} → /home/{{ user }}
              smb://{{ inventory_hostname }}/rootfs → / (read-only)
        marker_end: "{{ marker_end_latin1 }}"
    - name: convert markers to unicode
      ansible.builtin.replace:
        path: "{{ path }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      loop:
        - { regexp: "{{ marker_begin_latin1 }}", replace: "{{ marker_begin_unicode }}" }
        - { regexp: "{{ marker_end_latin1 }}", replace: "{{ marker_end_unicode }}" }
  become: true
