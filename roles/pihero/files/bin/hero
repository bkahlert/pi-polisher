#!/bin/bash

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

# shellcheck source=./../lib/lib.bash
source "$SCRIPT_DIR/../lib/lib.bash"

declare hero
printf -v hero '\033[33m─=≡\033[91mΣ\033[90m\033[101m((\033[30m\033[43m[ \033[31m蓬\033[30m•\033[91mｏ\033[30m•]\033[0m\033[93m⊐\033[0m'

# TODO call share with sudo

main() {
  printf "\n %s \033[1;33m%s\033[0m\n\n" "$hero" "Pi Hero" >&2
  local cmd
  if [ $# -eq 0 ]; then
    cmd=diag
  else
    cmd=$1
    shift
  fi

  case "$cmd" in
  diag)
    /opt/pihero/bt-pan-diag
    exit_code=$?
    /opt/pihero/usb-gadget diag && [ $exit_code -eq 0 ]
    ;;
  *pan)
    if [ "$#" -eq 0 ]; then
      /opt/pihero/bt-pan-diag
    elif [ "${1:-}" = diag ]; then
      /opt/pihero/bt-pan-diag "${@:1}"
    else
      sudo /opt/pihero/bt-pan "$@"
    fi
    ;;
  *gadget)
    if [ "$#" -eq 0 ]; then
      /opt/pihero/usb-gadget diag
    elif [ "${1:-}" = diag ]; then
      /opt/pihero/usb-gadget "$@"
    else
      sudo /opt/pihero/usb-gadget "$@"
    fi
    ;;
  share)
    case "${1:-}" in
    start | stop)
      lease=$(newest_dhcp_lease 2>/dev/null) || {
        printf "\033[33mFailed to find host. No corresponding DHCP lease was found.\033[0m\n" >&2
        exit 1
      }
      IFS=' ' read -ra c <<<"$lease"
      self_name="$(hostnamectl --pretty status)"
      host_ip="${c[1]}" # [1]=IP, [2]=MAC, [3]=hostname
      host_name="${c[3]}"
      if [ "$1" = "start" ]; then
        printf "Preparing \033[3m%s\033[23m to use \033[3m%s\033[23m (\033[3m%s\033[23m) as upstream...\033[0m\n" \
          "$self_name" "$host_name" "$host_ip" >&2
        if add_default_route "$host_ip" && dns_set; then
          printf "Done \033[32m✔︎\033[0m\n" >&2
          printf "\033[1mDon't forget to activate routing on \033[3m%s\033[23m!\033[0m\n" "$host_name" >&2
        else
          printf "\033[31mFailed to prepare \033[3m%s\033[23m to use \033[3m%s\033[23m (\033[3m%s\033[23m) as upstream.\033[0m\n" \
            "$self_name" "$host_name" "$host_ip" >&2
          exit 1
        fi
      else
        printf "Stopping \033[3m%s\033[23m from using \033[3m%s\033[23m (\033[3m%s\033[23m) as upstream...\033[0m\n" \
          "$self_name" "$host_name" "$host_ip" >&2
        if dns_unset && delete_default_route "$host_ip"; then
          printf "Done \033[32m✔︎\033[0m\n" >&2
          printf "\033[1mDon't forget to deactivate routing on \033[3m%s\033[23m!\033[0m\n" "$host_name" >&2
        else
          printf "\033[31mFailed to stop \033[3m%s\033[23m from using \033[3m%s\033[23m (\033[3m%s\033[23m) as upstream.\033[0m\n" \
            "$self_name" "$host_name" "$host_ip" >&2
          exit 1
        fi
      fi
      ip route show
      ;;
    *)
      printf "Usage: %s \033[3m%s\033[23m \033[3m%s\033[23m\n" "${0##*/}" share 'start|stop' >&2
      exit 1
      ;;
    esac
    ;;
  *)
    printf "Usage: %s \033[3m%s\033[23m [\033[3m%s\033[23m]\n" "${0##*/}" "diag|pan|gadget|share" "SUBCOMMANDS..." >&2
    exit 1
    ;;
  esac
}

main "$@"
